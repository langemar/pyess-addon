#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the pyess-addon service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

# Add your code here

bashio::log.info "declaring variables"

# Declare variables
declare ess_host sensors ess_password mqtt_host mqtt_user mqtt_password ess_update_interval

## Get the 'message' key from the user config options.

bashio::log.info "reading config"

ess_host=$(bashio::config 'ess_host')
sensors=$(bashio::config 'ess_sensors')
ess_password=$(bashio::config 'ess_password')
mqtt_host=$(bashio::services mqtt "host")
mqtt_user=$(bashio::services mqtt "username")
mqtt_password=$(bashio::services mqtt "password")
ess_update_interval=$(bashio::config 'ess_update_interval')

## Enable mdns autodiscovery if ess_host is not provided
if [[ "${ess_host}" == "null" ]];
then
    bashio::log.info "Will use mdns autodiscovery for ess host and logging to mqtt server ${mqtt_host}"
    ess_host=""
else
    bashio::log.info "Will use ess ${ess_host} and logging to mqtt server ${mqtt_host}"
    ess_host="--ess_host ${ess_host}"
fi

## Don't use a default value for bashio, instead use default value by essmqtt.py
if [[ "${ess_update_interval}" == "null" ]];
then
    ess_update_interval=""
else
    ess_update_interval="--interval_seconds ${ess_update_interval}"
fi

bashio::log.info "done reading config"

## Print the message the user supplied, defaults to "Hello World..."
bashio::log.info "Starting pyess..."

## Run your program
/usr/bin/essmqtt --ess_password ${ess_password} --mqtt_server ${mqtt_host} --mqtt_user ${mqtt_user} --mqtt_password ${mqtt_password} ${ess_host} ${ess_update_interval} --hass_autoconfig_sensors ${sensors}
